version: "3"

services:
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend  # Name of the Dockerfile for backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - 8000:8000
    environment:
      DEBUG: "True"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      DJANGO_DB: postgresql
      POSTGRES_HOST: db
      POSTGRES_NAME: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
    restart: on-failure
    depends_on:
      - db

  # frontend:
  #   build:
  #     context: ./frontend  
  #     dockerfile: Dockerfile.frontend
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/app

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"

  pgadmin:
    image: dpage/pgadmin4
    container_name: demo-pgadmin #you can change this
    depends_on:
      - db
    ports:
      - "5051:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: root
    restart: always

  redis:
    image: 'redis:alpine'
    hostname: redis
    ports:
      - "6379:6379"

  
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    command: celery -A closez worker --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - web
      - redis
      - db
    restart: on-failure


  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    command: celery -A closez beat -l info
    environment:
      - DEBUG=1
      - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    volumes:
      - ./backend:/app
    depends_on:
      - redis
    
  flower:
    image: mher/flower:latest
    container_name: flower
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=8888
    ports:
      - '5555:5555'
    command: celery --broker=redis://redis:6379/0 flower --port=5555
    depends_on:
      - celery
      - redis
    

networks:
  default:
    name: closez_network
   
volumes:
  postgres_data: